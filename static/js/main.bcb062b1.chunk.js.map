{"version":3,"sources":["components/Header.js","utility/API.js","components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","axios","get","EmployeeTable","state","result","filter","search","employeeDirectory","API","then","res","setState","data","results","catch","err","console","log","handleInputChange","event","value","target","filtered","query","name","first","includes","last","this","onChange","type","placeholder","aria-label","scope","map","element","alt","src","picture","thumbnail","phone","email","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAWeA,MARf,WACI,OACI,qBAAKC,UAAU,6BAAf,SACI,sBAAMA,UAAU,uBAAhB,mC,iDCJG,EACD,WACN,OAAOC,IAAMC,IAAI,kDC4DVC,E,4MA5DXC,MAAQ,CACJC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,I,EAMZC,kBAAoB,WAChBC,IAEGC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEP,OAAQM,EAAIE,KAAKC,aAC7CJ,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEN,OAAQ,EAAKF,MAAMC,YAC/CU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAEhCG,kBAAoB,SAAAC,GAChB,IAAMC,EAAQD,EAAME,OAAOD,MACrBE,EAAW,EAAKnB,MAAMC,OAAOC,QAAO,SAAAkB,GAAK,OAAIA,EAAMC,KAAKC,MAAMC,SAASN,IAAUG,EAAMC,KAAKG,KAAKD,SAASN,MAChH,EAAKT,SAAS,CAAEN,OAAQiB,K,kEAbxBM,KAAKrB,sB,+BAkBL,OACI,qCACA,uBAAMR,UAAU,2BAAhB,UACA,uBAAOA,UAAU,uBAAuB8B,SAAUD,KAAKV,kBAAmBY,KAAK,SAASC,YAAY,SAASC,aAAW,WACxH,wBAAQjC,UAAU,uCAAuC+B,KAAK,SAA9D,uBAGA,wBAAO/B,UAAU,QAAjB,UACI,gCACI,+BACA,oBAAIkC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCAEQL,KAAKzB,MAAME,OAAO6B,KAAI,SAAAC,GAAO,OACzB,+BACI,oBAAIF,MAAM,MAAV,SAAgB,qBAAKG,IAAKD,EAAQX,KAAKC,MAAOY,IAAKF,EAAQG,QAAQC,cACnE,+BAAKJ,EAAQX,KAAKC,MAAlB,IAA0BU,EAAQX,KAAKG,QACvC,6BAAKQ,EAAQK,QACb,6BAAKL,EAAQM,QACb,yC,GAlDJC,IAAMC,WCWnBC,MATf,WACE,OACE,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bcb062b1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../style/Header.css\";\n\nfunction Header() {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <span className=\"navbar-brand mb-0 h1\">Employee Directory</span>\n        </nav>\n    );\n}\n\nexport default Header;","import axios from \"axios\";\n\nexport default {\n    getUsers: function(){\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n    }\n};","import React from \"react\";\nimport API from '../utility/API'\n\nclass EmployeeTable extends React.Component {\n    state = {\n        result: [],\n        filter: [],\n        search: \"\"\n    }\n    componentDidMount(){\n        this.employeeDirectory();\n    }\n\n    employeeDirectory = () =>{\n        API.getUsers()\n        //   .then(res => console.log(res.data))\n          .then(res => this.setState({ result: res.data.results}))\n          .then(res => this.setState({ filter: this.state.result}))\n          .catch(err => console.log(err))\n    }\n    handleInputChange = event => {\n        const value = event.target.value;\n        const filtered = this.state.result.filter(query => query.name.first.includes(value) || query.name.last.includes(value))\n        this.setState({ filter: filtered })\n    }\n\n    render(){\n\n        return(\n            <>\n            <form className=\"form-inline my-2 my-lg-0\">\n            <input className=\"form-control mr-sm-2\" onChange={this.handleInputChange} type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form> \n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">First</th>\n                    <th scope=\"col\">Last</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">DOB</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.state.filter.map(element => (\n                            <tr>\n                                <th scope=\"row\"><img alt={element.name.first} src={element.picture.thumbnail}></img></th>\n                                <td>{element.name.first} {element.name.last}</td>\n                                <td>{element.phone}</td>\n                                <td>{element.email}</td>\n                                <td></td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n            </>\n        )\n    }\n}\n\nexport default EmployeeTable;","// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport EmployeeTable from './components/EmployeeTable'\n\nfunction App() {\n  return (\n    <>\n    <Header />\n    <EmployeeTable/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}